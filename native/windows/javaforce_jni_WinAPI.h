/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class javaforce_jni_WinAPI */

#ifndef _Included_javaforce_jni_WinAPI
#define _Included_javaforce_jni_WinAPI
#ifdef __cplusplus
extern "C" {
#endif
#undef javaforce_jni_WinAPI_snd_count
#define javaforce_jni_WinAPI_snd_count 32L
/*
 * Class:     javaforce_jni_WinAPI
 * Method:    byteArray2shortArray
 * Signature: ([B)[S
 */
JNIEXPORT jshortArray JNICALL Java_javaforce_jni_WinAPI_byteArray2shortArray
  (JNIEnv *, jclass, jbyteArray);

/*
 * Class:     javaforce_jni_WinAPI
 * Method:    shortArray2byteArray
 * Signature: ([S)[B
 */
JNIEXPORT jbyteArray JNICALL Java_javaforce_jni_WinAPI_shortArray2byteArray
  (JNIEnv *, jclass, jshortArray);

/*
 * Class:     javaforce_jni_WinAPI
 * Method:    byteArray2intArray
 * Signature: ([B)[I
 */
JNIEXPORT jintArray JNICALL Java_javaforce_jni_WinAPI_byteArray2intArray
  (JNIEnv *, jclass, jbyteArray);

/*
 * Class:     javaforce_jni_WinAPI
 * Method:    intArray2byteArray
 * Signature: ([I)[B
 */
JNIEXPORT jbyteArray JNICALL Java_javaforce_jni_WinAPI_intArray2byteArray
  (JNIEnv *, jclass, jintArray);

/*
 * Class:     javaforce_jni_WinAPI
 * Method:    get_window
 * Signature: (Ljava/lang/String;)I
 */
JNIEXPORT jint JNICALL Java_javaforce_jni_WinAPI_get_1window
  (JNIEnv *, jclass, jstring);

/*
 * Class:     javaforce_jni_WinAPI
 * Method:    clrscr
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_javaforce_jni_WinAPI_clrscr
  (JNIEnv *, jclass);

/*
 * Class:     javaforce_jni_WinAPI
 * Method:    gotoxy
 * Signature: (II)V
 */
JNIEXPORT void JNICALL Java_javaforce_jni_WinAPI_gotoxy
  (JNIEnv *, jclass, jint, jint);

/*
 * Class:     javaforce_jni_WinAPI
 * Method:    snd_clear_id
 * Signature: (I)V
 */
JNIEXPORT void JNICALL Java_javaforce_jni_WinAPI_snd_1clear_1id
  (JNIEnv *, jclass, jint);

/*
 * Class:     javaforce_jni_WinAPI
 * Method:    snd_play
 * Signature: (IIIII)Z
 */
JNIEXPORT jboolean JNICALL Java_javaforce_jni_WinAPI_snd_1play
  (JNIEnv *, jclass, jint, jint, jint, jint, jint);

/*
 * Class:     javaforce_jni_WinAPI
 * Method:    snd_play_write
 * Signature: (I[S)Z
 */
JNIEXPORT jboolean JNICALL Java_javaforce_jni_WinAPI_snd_1play_1write
  (JNIEnv *, jclass, jint, jshortArray);

/*
 * Class:     javaforce_jni_WinAPI
 * Method:    snd_play_stop
 * Signature: (I)Z
 */
JNIEXPORT jboolean JNICALL Java_javaforce_jni_WinAPI_snd_1play_1stop
  (JNIEnv *, jclass, jint);

/*
 * Class:     javaforce_jni_WinAPI
 * Method:    snd_play_buffers_full
 * Signature: (I)I
 */
JNIEXPORT jint JNICALL Java_javaforce_jni_WinAPI_snd_1play_1buffers_1full
  (JNIEnv *, jclass, jint);

/*
 * Class:     javaforce_jni_WinAPI
 * Method:    snd_record
 * Signature: (IIIII)Z
 */
JNIEXPORT jboolean JNICALL Java_javaforce_jni_WinAPI_snd_1record
  (JNIEnv *, jclass, jint, jint, jint, jint, jint);

/*
 * Class:     javaforce_jni_WinAPI
 * Method:    snd_record_read
 * Signature: (I[S)Z
 */
JNIEXPORT jboolean JNICALL Java_javaforce_jni_WinAPI_snd_1record_1read
  (JNIEnv *, jclass, jint, jshortArray);

/*
 * Class:     javaforce_jni_WinAPI
 * Method:    snd_record_stop
 * Signature: (I)Z
 */
JNIEXPORT jboolean JNICALL Java_javaforce_jni_WinAPI_snd_1record_1stop
  (JNIEnv *, jclass, jint);

/*
 * Class:     javaforce_jni_WinAPI
 * Method:    vfw_open
 * Signature: (IIIIIII)Z
 */
JNIEXPORT jboolean JNICALL Java_javaforce_jni_WinAPI_vfw_1open
  (JNIEnv *, jclass, jint, jint, jint, jint, jint, jint, jint);

/*
 * Class:     javaforce_jni_WinAPI
 * Method:    vfw_close
 * Signature: ()Z
 */
JNIEXPORT jboolean JNICALL Java_javaforce_jni_WinAPI_vfw_1close
  (JNIEnv *, jclass);

/*
 * Class:     javaforce_jni_WinAPI
 * Method:    vfw_get_info
 * Signature: ()[I
 */
JNIEXPORT jintArray JNICALL Java_javaforce_jni_WinAPI_vfw_1get_1info
  (JNIEnv *, jclass);

/*
 * Class:     javaforce_jni_WinAPI
 * Method:    vfw_get_frame
 * Signature: ()[I
 */
JNIEXPORT jintArray JNICALL Java_javaforce_jni_WinAPI_vfw_1get_1frame
  (JNIEnv *, jclass);

/*
 * Class:     javaforce_jni_WinAPI
 * Method:    vfw_process
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_javaforce_jni_WinAPI_vfw_1process
  (JNIEnv *, jclass);

/*
 * Class:     javaforce_jni_WinAPI
 * Method:    vi_num_devices
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_javaforce_jni_WinAPI_vi_1num_1devices
  (JNIEnv *, jclass);

/*
 * Class:     javaforce_jni_WinAPI
 * Method:    vi_open
 * Signature: (III)Z
 */
JNIEXPORT jboolean JNICALL Java_javaforce_jni_WinAPI_vi_1open
  (JNIEnv *, jclass, jint, jint, jint);

/*
 * Class:     javaforce_jni_WinAPI
 * Method:    vi_close
 * Signature: (I)Z
 */
JNIEXPORT jboolean JNICALL Java_javaforce_jni_WinAPI_vi_1close
  (JNIEnv *, jclass, jint);

/*
 * Class:     javaforce_jni_WinAPI
 * Method:    vi_get_info
 * Signature: (I)[I
 */
JNIEXPORT jintArray JNICALL Java_javaforce_jni_WinAPI_vi_1get_1info
  (JNIEnv *, jclass, jint);

/*
 * Class:     javaforce_jni_WinAPI
 * Method:    vi_get_frame
 * Signature: (I)[I
 */
JNIEXPORT jintArray JNICALL Java_javaforce_jni_WinAPI_vi_1get_1frame
  (JNIEnv *, jclass, jint);

#ifdef __cplusplus
}
#endif
#endif
