/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class javaforce_jni_LnxAPI */

#ifndef _Included_javaforce_jni_LnxAPI
#define _Included_javaforce_jni_LnxAPI
#ifdef __cplusplus
extern "C" {
#endif
#undef javaforce_jni_LnxAPI_X11_SHIFT
#define javaforce_jni_LnxAPI_X11_SHIFT 256L
#undef javaforce_jni_LnxAPI_gst_count
#define javaforce_jni_LnxAPI_gst_count 32L
#undef javaforce_jni_LnxAPI_GST_EOS
#define javaforce_jni_LnxAPI_GST_EOS 1L
#undef javaforce_jni_LnxAPI_GST_ERROR
#define javaforce_jni_LnxAPI_GST_ERROR 2L
#undef javaforce_jni_LnxAPI_GST_STATE_VOID_PENDING
#define javaforce_jni_LnxAPI_GST_STATE_VOID_PENDING 0L
#undef javaforce_jni_LnxAPI_GST_STATE_NULL
#define javaforce_jni_LnxAPI_GST_STATE_NULL 1L
#undef javaforce_jni_LnxAPI_GST_STATE_READY
#define javaforce_jni_LnxAPI_GST_STATE_READY 2L
#undef javaforce_jni_LnxAPI_GST_STATE_PAUSED
#define javaforce_jni_LnxAPI_GST_STATE_PAUSED 3L
#undef javaforce_jni_LnxAPI_GST_STATE_PLAYING
#define javaforce_jni_LnxAPI_GST_STATE_PLAYING 4L
/*
 * Class:     javaforce_jni_LnxAPI
 * Method:    byteArray2shortArray
 * Signature: ([B)[S
 */
JNIEXPORT jshortArray JNICALL Java_javaforce_jni_LnxAPI_byteArray2shortArray
  (JNIEnv *, jclass, jbyteArray);

/*
 * Class:     javaforce_jni_LnxAPI
 * Method:    shortArray2byteArray
 * Signature: ([S)[B
 */
JNIEXPORT jbyteArray JNICALL Java_javaforce_jni_LnxAPI_shortArray2byteArray
  (JNIEnv *, jclass, jshortArray);

/*
 * Class:     javaforce_jni_LnxAPI
 * Method:    byteArray2intArray
 * Signature: ([B)[I
 */
JNIEXPORT jintArray JNICALL Java_javaforce_jni_LnxAPI_byteArray2intArray
  (JNIEnv *, jclass, jbyteArray);

/*
 * Class:     javaforce_jni_LnxAPI
 * Method:    intArray2byteArray
 * Signature: ([I)[B
 */
JNIEXPORT jbyteArray JNICALL Java_javaforce_jni_LnxAPI_intArray2byteArray
  (JNIEnv *, jclass, jintArray);

/*
 * Class:     javaforce_jni_LnxAPI
 * Method:    authUser
 * Signature: (Ljava/lang/String;Ljava/lang/String;)Z
 */
JNIEXPORT jboolean JNICALL Java_javaforce_jni_LnxAPI_authUser
  (JNIEnv *, jclass, jstring, jstring);

/*
 * Class:     javaforce_jni_LnxAPI
 * Method:    x11_get_id
 * Signature: (Ljava/lang/String;)I
 */
JNIEXPORT jint JNICALL Java_javaforce_jni_LnxAPI_x11_1get_1id
  (JNIEnv *, jclass, jstring);

/*
 * Class:     javaforce_jni_LnxAPI
 * Method:    x11_set_desktop
 * Signature: (I)Z
 */
JNIEXPORT jboolean JNICALL Java_javaforce_jni_LnxAPI_x11_1set_1desktop
  (JNIEnv *, jclass, jint);

/*
 * Class:     javaforce_jni_LnxAPI
 * Method:    x11_set_dock
 * Signature: (I)Z
 */
JNIEXPORT jboolean JNICALL Java_javaforce_jni_LnxAPI_x11_1set_1dock
  (JNIEnv *, jclass, jint);

/*
 * Class:     javaforce_jni_LnxAPI
 * Method:    x11_set_strut
 * Signature: (IIIIII)Z
 */
JNIEXPORT jboolean JNICALL Java_javaforce_jni_LnxAPI_x11_1set_1strut
  (JNIEnv *, jclass, jint, jint, jint, jint, jint, jint);

/*
 * Class:     javaforce_jni_LnxAPI
 * Method:    x11_set_workarea
 * Signature: (IIIII)Z
 */
JNIEXPORT jboolean JNICALL Java_javaforce_jni_LnxAPI_x11_1set_1workarea
  (JNIEnv *, jclass, jint, jint, jint, jint, jint);

/*
 * Class:     javaforce_jni_LnxAPI
 * Method:    x11_keysym_to_keycode
 * Signature: (C)I
 */
JNIEXPORT jint JNICALL Java_javaforce_jni_LnxAPI_x11_1keysym_1to_1keycode
  (JNIEnv *, jclass, jchar);

/*
 * Class:     javaforce_jni_LnxAPI
 * Method:    x11_send_event
 * Signature: (IZ)Z
 */
JNIEXPORT jboolean JNICALL Java_javaforce_jni_LnxAPI_x11_1send_1event
  (JNIEnv *, jclass, jint, jboolean);

/*
 * Class:     javaforce_jni_LnxAPI
 * Method:    x11_toggle_numlock
 * Signature: ()Z
 */
JNIEXPORT jboolean JNICALL Java_javaforce_jni_LnxAPI_x11_1toggle_1numlock
  (JNIEnv *, jclass);

/*
 * Class:     javaforce_jni_LnxAPI
 * Method:    x11_tray_main
 * Signature: (Ljava/lang/Class;Ljavaforce/jni/TrayListener;II)Z
 */
JNIEXPORT jboolean JNICALL Java_javaforce_jni_LnxAPI_x11_1tray_1main
  (JNIEnv *, jclass, jclass, jobject, jint, jint);

/*
 * Class:     javaforce_jni_LnxAPI
 * Method:    x11_tray_stop
 * Signature: ()Z
 */
JNIEXPORT jboolean JNICALL Java_javaforce_jni_LnxAPI_x11_1tray_1stop
  (JNIEnv *, jclass);

/*
 * Class:     javaforce_jni_LnxAPI
 * Method:    gst_clear_id
 * Signature: (I)V
 */
JNIEXPORT void JNICALL Java_javaforce_jni_LnxAPI_gst_1clear_1id
  (JNIEnv *, jclass, jint);

/*
 * Class:     javaforce_jni_LnxAPI
 * Method:    gst_init
 * Signature: ()Z
 */
JNIEXPORT jboolean JNICALL Java_javaforce_jni_LnxAPI_gst_1init
  (JNIEnv *, jclass);

/*
 * Class:     javaforce_jni_LnxAPI
 * Method:    gst_init_id
 * Signature: (ILjava/lang/Class;Ljavaforce/jni/GSTListener;)Z
 */
JNIEXPORT jboolean JNICALL Java_javaforce_jni_LnxAPI_gst_1init_1id
  (JNIEnv *, jclass, jint, jclass, jobject);

/*
 * Class:     javaforce_jni_LnxAPI
 * Method:    gst_play
 * Signature: (ILjava/lang/String;IZ)Z
 */
JNIEXPORT jboolean JNICALL Java_javaforce_jni_LnxAPI_gst_1play
  (JNIEnv *, jclass, jint, jstring, jint, jboolean);

/*
 * Class:     javaforce_jni_LnxAPI
 * Method:    gst_stop
 * Signature: (I)Z
 */
JNIEXPORT jboolean JNICALL Java_javaforce_jni_LnxAPI_gst_1stop
  (JNIEnv *, jclass, jint);

/*
 * Class:     javaforce_jni_LnxAPI
 * Method:    gst_pause
 * Signature: (I)Z
 */
JNIEXPORT jboolean JNICALL Java_javaforce_jni_LnxAPI_gst_1pause
  (JNIEnv *, jclass, jint);

/*
 * Class:     javaforce_jni_LnxAPI
 * Method:    gst_resume
 * Signature: (I)Z
 */
JNIEXPORT jboolean JNICALL Java_javaforce_jni_LnxAPI_gst_1resume
  (JNIEnv *, jclass, jint);

/*
 * Class:     javaforce_jni_LnxAPI
 * Method:    gst_reset
 * Signature: (I)Z
 */
JNIEXPORT jboolean JNICALL Java_javaforce_jni_LnxAPI_gst_1reset
  (JNIEnv *, jclass, jint);

/*
 * Class:     javaforce_jni_LnxAPI
 * Method:    gst_seek
 * Signature: (IJ)Z
 */
JNIEXPORT jboolean JNICALL Java_javaforce_jni_LnxAPI_gst_1seek
  (JNIEnv *, jclass, jint, jlong);

/*
 * Class:     javaforce_jni_LnxAPI
 * Method:    gst_get_pos
 * Signature: (I)J
 */
JNIEXPORT jlong JNICALL Java_javaforce_jni_LnxAPI_gst_1get_1pos
  (JNIEnv *, jclass, jint);

/*
 * Class:     javaforce_jni_LnxAPI
 * Method:    gst_get_length
 * Signature: (I)J
 */
JNIEXPORT jlong JNICALL Java_javaforce_jni_LnxAPI_gst_1get_1length
  (JNIEnv *, jclass, jint);

/*
 * Class:     javaforce_jni_LnxAPI
 * Method:    gst_get_state
 * Signature: (I)I
 */
JNIEXPORT jint JNICALL Java_javaforce_jni_LnxAPI_gst_1get_1state
  (JNIEnv *, jclass, jint);

/*
 * Class:     javaforce_jni_LnxAPI
 * Method:    gst_main_loop_run
 * Signature: ()Z
 */
JNIEXPORT jboolean JNICALL Java_javaforce_jni_LnxAPI_gst_1main_1loop_1run
  (JNIEnv *, jclass);

/*
 * Class:     javaforce_jni_LnxAPI
 * Method:    gst_main_loop_quit
 * Signature: ()Z
 */
JNIEXPORT jboolean JNICALL Java_javaforce_jni_LnxAPI_gst_1main_1loop_1quit
  (JNIEnv *, jclass);

/*
 * Class:     javaforce_jni_LnxAPI
 * Method:    gst_read_file
 * Signature: (ILjava/lang/String;)Z
 */
JNIEXPORT jboolean JNICALL Java_javaforce_jni_LnxAPI_gst_1read_1file
  (JNIEnv *, jclass, jint, jstring);

/*
 * Class:     javaforce_jni_LnxAPI
 * Method:    gst_read_file_reformat
 * Signature: (ILjava/lang/String;IIIIIII)Z
 */
JNIEXPORT jboolean JNICALL Java_javaforce_jni_LnxAPI_gst_1read_1file_1reformat
  (JNIEnv *, jclass, jint, jstring, jint, jint, jint, jint, jint, jint, jint);

/*
 * Class:     javaforce_jni_LnxAPI
 * Method:    gst_read_audio_shortArray
 * Signature: (I)[S
 */
JNIEXPORT jshortArray JNICALL Java_javaforce_jni_LnxAPI_gst_1read_1audio_1shortArray
  (JNIEnv *, jclass, jint);

/*
 * Class:     javaforce_jni_LnxAPI
 * Method:    gst_read_audio_byteArray
 * Signature: (I)[B
 */
JNIEXPORT jbyteArray JNICALL Java_javaforce_jni_LnxAPI_gst_1read_1audio_1byteArray
  (JNIEnv *, jclass, jint);

/*
 * Class:     javaforce_jni_LnxAPI
 * Method:    gst_read_video
 * Signature: (I)[B
 */
JNIEXPORT jbyteArray JNICALL Java_javaforce_jni_LnxAPI_gst_1read_1video
  (JNIEnv *, jclass, jint);

/*
 * Class:     javaforce_jni_LnxAPI
 * Method:    gst_read_video_info
 * Signature: (I)[I
 */
JNIEXPORT jintArray JNICALL Java_javaforce_jni_LnxAPI_gst_1read_1video_1info
  (JNIEnv *, jclass, jint);

/*
 * Class:     javaforce_jni_LnxAPI
 * Method:    gst_read_audio_info
 * Signature: (I)[I
 */
JNIEXPORT jintArray JNICALL Java_javaforce_jni_LnxAPI_gst_1read_1audio_1info
  (JNIEnv *, jclass, jint);

/*
 * Class:     javaforce_jni_LnxAPI
 * Method:    gst_write_file
 * Signature: (ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Z
 */
JNIEXPORT jboolean JNICALL Java_javaforce_jni_LnxAPI_gst_1write_1file
  (JNIEnv *, jclass, jint, jstring, jstring, jstring, jstring);

/*
 * Class:     javaforce_jni_LnxAPI
 * Method:    gst_write_audio
 * Signature: (I[BIII)Z
 */
JNIEXPORT jboolean JNICALL Java_javaforce_jni_LnxAPI_gst_1write_1audio__I_3BIII
  (JNIEnv *, jclass, jint, jbyteArray, jint, jint, jint);

/*
 * Class:     javaforce_jni_LnxAPI
 * Method:    gst_write_audio
 * Signature: (I[SIII)Z
 */
JNIEXPORT jboolean JNICALL Java_javaforce_jni_LnxAPI_gst_1write_1audio__I_3SIII
  (JNIEnv *, jclass, jint, jshortArray, jint, jint, jint);

/*
 * Class:     javaforce_jni_LnxAPI
 * Method:    gst_write_video
 * Signature: (I[BIIII)Z
 */
JNIEXPORT jboolean JNICALL Java_javaforce_jni_LnxAPI_gst_1write_1video
  (JNIEnv *, jclass, jint, jbyteArray, jint, jint, jint, jint);

/*
 * Class:     javaforce_jni_LnxAPI
 * Method:    gst_transcoder
 * Signature: (ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Z)Z
 */
JNIEXPORT jboolean JNICALL Java_javaforce_jni_LnxAPI_gst_1transcoder
  (JNIEnv *, jclass, jint, jstring, jstring, jstring, jstring, jstring, jboolean);

/*
 * Class:     javaforce_jni_LnxAPI
 * Method:    snd_play
 * Signature: (ILjava/lang/String;)Z
 */
JNIEXPORT jboolean JNICALL Java_javaforce_jni_LnxAPI_snd_1play
  (JNIEnv *, jclass, jint, jstring);

/*
 * Class:     javaforce_jni_LnxAPI
 * Method:    snd_play_write
 * Signature: (I[SIII)Z
 */
JNIEXPORT jboolean JNICALL Java_javaforce_jni_LnxAPI_snd_1play_1write__I_3SIII
  (JNIEnv *, jclass, jint, jshortArray, jint, jint, jint);

/*
 * Class:     javaforce_jni_LnxAPI
 * Method:    snd_play_write
 * Signature: (I[BIII)Z
 */
JNIEXPORT jboolean JNICALL Java_javaforce_jni_LnxAPI_snd_1play_1write__I_3BIII
  (JNIEnv *, jclass, jint, jbyteArray, jint, jint, jint);

/*
 * Class:     javaforce_jni_LnxAPI
 * Method:    snd_record
 * Signature: (IIIILjava/lang/String;)Z
 */
JNIEXPORT jboolean JNICALL Java_javaforce_jni_LnxAPI_snd_1record
  (JNIEnv *, jclass, jint, jint, jint, jint, jstring);

/*
 * Class:     javaforce_jni_LnxAPI
 * Method:    gst_rtp_video_encoder
 * Signature: (I)Z
 */
JNIEXPORT jboolean JNICALL Java_javaforce_jni_LnxAPI_gst_1rtp_1video_1encoder
  (JNIEnv *, jclass, jint);

/*
 * Class:     javaforce_jni_LnxAPI
 * Method:    gst_rtp_video_encoder_write
 * Signature: (I[BII)Z
 */
JNIEXPORT jboolean JNICALL Java_javaforce_jni_LnxAPI_gst_1rtp_1video_1encoder_1write
  (JNIEnv *, jclass, jint, jbyteArray, jint, jint);

/*
 * Class:     javaforce_jni_LnxAPI
 * Method:    gst_rtp_video_encoder_read
 * Signature: (I)[B
 */
JNIEXPORT jbyteArray JNICALL Java_javaforce_jni_LnxAPI_gst_1rtp_1video_1encoder_1read
  (JNIEnv *, jclass, jint);

/*
 * Class:     javaforce_jni_LnxAPI
 * Method:    gst_rtp_video_decoder
 * Signature: (I)Z
 */
JNIEXPORT jboolean JNICALL Java_javaforce_jni_LnxAPI_gst_1rtp_1video_1decoder
  (JNIEnv *, jclass, jint);

/*
 * Class:     javaforce_jni_LnxAPI
 * Method:    gst_rtp_video_decoder_write
 * Signature: (I[B)Z
 */
JNIEXPORT jboolean JNICALL Java_javaforce_jni_LnxAPI_gst_1rtp_1video_1decoder_1write
  (JNIEnv *, jclass, jint, jbyteArray);

/*
 * Class:     javaforce_jni_LnxAPI
 * Method:    gst_rtp_video_decoder_read
 * Signature: (I)[B
 */
JNIEXPORT jbyteArray JNICALL Java_javaforce_jni_LnxAPI_gst_1rtp_1video_1decoder_1read
  (JNIEnv *, jclass, jint);

/*
 * Class:     javaforce_jni_LnxAPI
 * Method:    gst_video_capture
 * Signature: (IIILjava/lang/String;)Z
 */
JNIEXPORT jboolean JNICALL Java_javaforce_jni_LnxAPI_gst_1video_1capture
  (JNIEnv *, jclass, jint, jint, jint, jstring);

/*
 * Class:     javaforce_jni_LnxAPI
 * Method:    gst_video_capture_read
 * Signature: (I)[B
 */
JNIEXPORT jbyteArray JNICALL Java_javaforce_jni_LnxAPI_gst_1video_1capture_1read
  (JNIEnv *, jclass, jint);

/*
 * Class:     javaforce_jni_LnxAPI
 * Method:    jpeg_encoder
 * Signature: ([IIII)[B
 */
JNIEXPORT jbyteArray JNICALL Java_javaforce_jni_LnxAPI_jpeg_1encoder
  (JNIEnv *, jclass, jintArray, jint, jint, jint);

/*
 * Class:     javaforce_jni_LnxAPI
 * Method:    jpeg_decoder
 * Signature: ([B[I)[I
 */
JNIEXPORT jintArray JNICALL Java_javaforce_jni_LnxAPI_jpeg_1decoder
  (JNIEnv *, jclass, jbyteArray, jintArray);

/*
 * Class:     javaforce_jni_LnxAPI
 * Method:    inotify_init
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_javaforce_jni_LnxAPI_inotify_1init
  (JNIEnv *, jclass);

/*
 * Class:     javaforce_jni_LnxAPI
 * Method:    inotigy_uninit
 * Signature: (I)V
 */
JNIEXPORT void JNICALL Java_javaforce_jni_LnxAPI_inotigy_1uninit
  (JNIEnv *, jclass, jint);

/*
 * Class:     javaforce_jni_LnxAPI
 * Method:    inotify_add_watch
 * Signature: (ILjava/lang/String;)I
 */
JNIEXPORT jint JNICALL Java_javaforce_jni_LnxAPI_inotify_1add_1watch
  (JNIEnv *, jclass, jint, jstring);

/*
 * Class:     javaforce_jni_LnxAPI
 * Method:    inotify_rm_watch
 * Signature: (II)V
 */
JNIEXPORT void JNICALL Java_javaforce_jni_LnxAPI_inotify_1rm_1watch
  (JNIEnv *, jclass, jint, jint);

/*
 * Class:     javaforce_jni_LnxAPI
 * Method:    inotify_read
 * Signature: (I)[Ljava/lang/String;
 */
JNIEXPORT jobjectArray JNICALL Java_javaforce_jni_LnxAPI_inotify_1read
  (JNIEnv *, jclass, jint);

#ifdef __cplusplus
}
#endif
#endif
